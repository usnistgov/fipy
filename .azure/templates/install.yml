parameters:
- name: VAL_AS_MACRO
  type: string
  default: eemmppttyy
- name: VAL_AS_VARIABLE_DOT
  type: string
  default: eemmppttyy

steps:
- bash: echo $(VAR)
  displayName: value from template file as a variable
- bash: echo ${{ parameters.VAL_AS_MACRO }}
  displayName: value from template file as an expression with macro syntax
- bash: echo ${{ parameters.VAL_AS_VARIABLE_DOT }}
  displayName: value from template file as an expression with "variables." syntax
- bash: echo Yup
  displayName: conditional on variable
  condition: eq(variables.VAR, 'foo')
- bash: echo Yup
  displayName: conditional on parameter with "variables." syntax
  condition: eq(${{ parameters.VAL_AS_VARIABLE_DOT }}, 'foo')
# this next one would fail to compile
# - bash: echo NOPE
#   displayName: conditional on parameter as macro syntax
#   condition: eq(${{ parameters.VAL_AS_MACRO }}, 'foo')