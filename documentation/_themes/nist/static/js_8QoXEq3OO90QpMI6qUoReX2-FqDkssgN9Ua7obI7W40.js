!function(n){Drupal.behaviors.accessibleCollapse={attach:function(e,t){n(".ctools-collapsible-handle").attr("tabindex","0"),n(document).on("keyup",".ctools-collapsible-handle",function(e){13!=e.which&&32!=e.which||n(this).click()})}}}(jQuery),function(t){t(document).ready(function(){function e(){1<=t(".addthis_sharing_toolbox").length&&(1<=t("#atstbx").length?t("#atstbx a span").each(function(){var e=t(this).attr("title");t(this).html('<span class="element-invisible">'+e+"</span>"),t(this).parent("a").attr("href","#")}):setTimeout(function(){e()},5e3))}t(".social-media-print__sharing-toggle").click(function(e){e.preventDefault(),t(".addthis_sharing_toolbox").fadeToggle()}),t(document).keyup(function(e){27==e.keyCode&&t(".addthis_sharing_toolbox").fadeOut()}),e()})}(jQuery),function(n){var t=["body.page-news-events-events-calendar"];function i(){n("#calendar__toggle-calendar").hasClass("active")||(n(".view--events-calendar .attachment").fadeOut(0,function(){n(".view--events-calendar .view-content").fadeIn(300)}),n("#calendar__toggle-calendar").addClass("active"),n("#calendar__toggle-list").removeClass("active"),n("body").removeClass("hide-calendar").addClass("show-calendar"))}function s(){n("#calendar__toggle-list").hasClass("active")||(n("body").hasClass("show-calendar")?n(".view--events-calendar .view-content").fadeOut(0,function(){n(".view--events-calendar .attachment,.view--events-calendar .attachment .view-content").fadeIn(300)}):n(".view--events-calendar .attachment,.view--events-calendar .attachment .view-content").fadeIn(300),n("#calendar__toggle-list").addClass("active"),n("#calendar__toggle-calendar").removeClass("active"),n("body").removeClass("show-calendar").removeClass("had-calendar").addClass("hide-calendar"))}n(document).ready(function(){var e;e=t,n.each(e,function(e,t){1==n(t).length&&n("body").addClass("show-calendar")}),n("#calendar__toggle-calendar").click(function(e){e.preventDefault(),i()}),n("#calendar__toggle-list").click(function(e){e.preventDefault(),s()})}),n(document).ajaxComplete(function(){n("body").hasClass("show-calendar")?(i(),n("#calendar__toggle-calendar").addClass("active"),n("#calendar__toggle-list").removeClass("active")):n("body").hasClass("hide-calendar")&&(s(),n("#calendar__toggle-list").addClass("active"),n("#calendar__toggle-calendar").removeClass("active")),n("#calendar__toggle-calendar").click(function(e){e.preventDefault(),i()}),n("#calendar__toggle-list").click(function(e){e.preventDefault(),s()})}),n(window).load(function(){window.loaded=!0}),n(document).ready(function(){enquire.register("screen and (max-width:679px)",{match:function(){n("body").hasClass("show-calendar")&&(s(),!0===window.loaded&&n("body").addClass("had-calendar"))},unmatch:function(){n("body").hasClass("had-calendar")&&i()},setup:function(){},deferSetup:!0,destroy:function(){}})})}(jQuery),function(e){e(document).ready(function(){e(".pane--publication-topic-area-taxonomy-topic-area .view-content").columnize({columns:3,lastNeverTallest:!0}),e("footer .menu-name-main-menu .menu li:first-child .menu").columnize({columns:2,lastNeverTallest:!0})})}(jQuery),function(l){var e=[".panel-region--call-outs .pane--callout .pane__inner-content",".pane--half-width .pane__inner-content",".pane--half-width .pane__header",".nist-featured-topics__link",".nist-hero--homepage .nist-hero__caption--overlay",".topic-card a",".equal-height"];function t(e){l.each(e,function(e,t){var n,i,s,a,o;1<l(t).length&&(i=[],l(n=t).each(function(){var e=l(this).outerHeight();i.push(e)}),s=i,a=n,o=Math.max.apply(Math,s),l(a).css("height",o+"px"))})}function n(e){l.each(e,function(e,t){1<l(t).length&&l(t).css("height","auto")})}l(window).resize(function(){680<=l(window).width()&&(n(e),t(e))}),l(window).load(function(){680<=l(window).width()&&(n(e),t(e)),enquire.register("screen and (max-width:679px)",{match:function(){n(e)},unmatch:function(){t(e)},setup:function(){},deferSetup:!0,destroy:function(){}})})}(jQuery),function(n){Drupal.behaviors.testAjax={attach:function(e,t){null!=e.context&&t.views&&t.views.ajaxViews&&n("body").addClass("ajax-ran")}}}(jQuery),function(e,t,n){var i=window.matchMedia;"undefined"!=typeof module&&module.exports?module.exports=n(i):"function"==typeof define&&define.amd?define(function(){return t[e]=n(i)}):t[e]=n(i)}("enquire",this,function(i){"use strict";function o(e,t){for(var n=0,i=e.length;n<i&&!1!==t(e[n],n);n++);}function l(e){return"function"==typeof e}function n(e){!(this.options=e).deferSetup&&this.setup()}function r(e,t){this.query=e,this.isUnconditional=t,this.handlers=[],this.mql=i(e);var n=this;this.listener=function(e){n.mql=e,n.assess()},this.mql.addListener(this.listener)}function e(){if(!i)throw new Error("matchMedia not present, legacy browsers require a polyfill");this.queries={},this.browserIsIncapable=!i("only all").matches}return n.prototype={setup:function(){this.options.setup&&this.options.setup(),this.initialised=!0},on:function(){!this.initialised&&this.setup(),this.options.match&&this.options.match()},off:function(){this.options.unmatch&&this.options.unmatch()},destroy:function(){this.options.destroy?this.options.destroy():this.off()},equals:function(e){return this.options===e||this.options.match===e}},r.prototype={addHandler:function(e){var t=new n(e);this.handlers.push(t),this.matches()&&t.on()},removeHandler:function(n){var i=this.handlers;o(i,function(e,t){return e.equals(n)?(e.destroy(),!i.splice(t,1)):void 0})},matches:function(){return this.mql.matches||this.isUnconditional},clear:function(){o(this.handlers,function(e){e.destroy()}),this.mql.removeListener(this.listener),this.handlers.length=0},assess:function(){var t=this.matches()?"on":"off";o(this.handlers,function(e){e[t]()})}},e.prototype={register:function(t,e,n){var i,s=this.queries,a=n&&this.browserIsIncapable;return s[t]||(s[t]=new r(t,a)),l(e)&&(e={match:e}),i=e,"[object Array]"===Object.prototype.toString.apply(i)||(e=[e]),o(e,function(e){l(e)&&(e={match:e}),s[t].addHandler(e)}),this},unregister:function(e,t){var n=this.queries[e];return n&&(t?n.removeHandler(t):(n.clear(),delete this.queries[e])),this}},new e}),function(s){function n(e){s(e).resize()}function i(e){s(e).removeClass("fullscreen"),n(e)}Drupal.behaviors.nistslider={attach:function(e,t){s(".nist-slider").find("picture").each(function(e,t){var n=s(t).find("img"),i=s("<div />").css({"background-image":"url("+n.attr("src")+")"}).addClass("nist-slider__bg-image");s(t).after(i)}),s(".nist-slider__fullscreen-open").click(function(e){var t;e.preventDefault(),t=s(this).closest(".nist-slider"),s(t).addClass("fullscreen"),n(t)}),s(".nist-slider__fullscreen-close").click(function(e){e.preventDefault(),i(s(this).closest(".nist-slider"))}),s(".nist-slider").bind("start",function(e,t){s(".nist-slider__slide-total").text(t.count)}),s(".nist-slider").bind("after",function(e,t){s(".nist-slider__slide-current").text(t.currentSlide+1)})}},s(document).keyup(function(e){27==e.keyCode&&i()})}(jQuery),function(){"use strict";var t,n=[];function e(){for(;n.length;)n[0](),n.shift()}function a(e){this.a=o,this.b=void 0,this.f=[];var t=this;try{e(function(e){!function t(n,e){if(n.a==o){if(e==n)throw new TypeError;var i=!1;try{var s=e&&e.then;if(null!=e&&"object"==typeof e&&"function"==typeof s)return void s.call(e,function(e){i||t(n,e),i=!0},function(e){i||r(n,e),i=!0})}catch(e){return void(i||r(n,e))}n.a=0,n.b=e,d(n)}}(t,e)},function(e){r(t,e)})}catch(e){r(t,e)}}t=function(){setTimeout(e)};var o=2;function l(t){return new a(function(e){e(t)})}function r(e,t){if(e.a==o){if(t==e)throw new TypeError;e.a=1,e.b=t,d(e)}}function d(s){var e;e=function(){if(s.a!=o)for(;s.f.length;){var e=(i=s.f.shift())[0],t=i[1],n=i[2],i=i[3];try{0==s.a?n("function"==typeof e?e.call(void 0,s.b):s.b):1==s.a&&("function"==typeof t?n(t.call(void 0,s.b)):i(s.b))}catch(e){i(e)}}},n.push(e),1==n.length&&t()}a.prototype.g=function(e){return this.c(void 0,e)},a.prototype.c=function(n,i){var s=this;return new a(function(e,t){s.f.push([n,i,e,t]),d(s)})},window.Promise||(window.Promise=a,window.Promise.resolve=l,window.Promise.reject=function(n){return new a(function(e,t){t(n)})},window.Promise.race=function(i){return new a(function(e,t){for(var n=0;n<i.length;n+=1)l(i[n]).c(e,t)})},window.Promise.all=function(o){return new a(function(n,e){function t(t){return function(e){s[t]=e,(i+=1)==o.length&&n(s)}}var i=0,s=[];0==o.length&&n(s);for(var a=0;a<o.length;a+=1)l(o[a]).c(t(a),e)})},window.Promise.prototype.then=a.prototype.c,window.Promise.prototype.catch=a.prototype.g)}(),function(){function s(e,t){document.addEventListener?e.addEventListener("scroll",t,!1):e.attachEvent("scroll",t)}function w(e){this.a=document.createElement("div"),this.a.setAttribute("aria-hidden","true"),this.a.appendChild(document.createTextNode(e)),this.b=document.createElement("span"),this.c=document.createElement("span"),this.h=document.createElement("span"),this.f=document.createElement("span"),this.g=-1,this.b.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.c.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.f.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.h.style.cssText="display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;",this.b.appendChild(this.h),this.c.appendChild(this.f),this.a.appendChild(this.b),this.a.appendChild(this.c)}function y(e,t){e.a.style.cssText="max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:"+t+";"}function a(e){var t=e.a.offsetWidth,n=t+100;return e.f.style.width=n+"px",e.c.scrollLeft=n,e.b.scrollLeft=e.b.scrollWidth+100,e.g!==t&&(e.g=t,!0)}function _(e,t){function n(){var e=i;a(e)&&e.a.parentNode&&t(e.g)}var i=e;s(e.b,n),s(e.c,n),a(e)}function e(e,t){var n=t||{};this.family=e,this.style=n.style||"normal",this.weight=n.weight||"normal",this.stretch=n.stretch||"normal"}var C=null,i=null,n=null,t=null;function o(){return null===t&&(t=!!document.fonts),t}function x(e,t){return[e.style,e.weight,function(){if(null===n){var e=document.createElement("div");try{e.style.font="condensed 100px sans-serif"}catch(e){}n=""!==e.style.font}return n}()?e.stretch:"","100px",t].join(" ")}e.prototype.load=function(e,t){var p=this,m=e||"BESbswy",v=0,g=t||3e3,b=(new Date).getTime();return new Promise(function(h,f){if(o()&&!function(){if(null===i)if(o()&&/Apple/.test(window.navigator.vendor)){var e=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent);i=!!e&&parseInt(e[1],10)<603}else i=!1;return i}()){var e=new Promise(function(n,e){!function t(){(new Date).getTime()-b>=g?e():document.fonts.load(x(p,'"'+p.family+'"'),m).then(function(e){1<=e.length?n():setTimeout(t,25)},function(){e()})}()}),t=new Promise(function(e,t){v=setTimeout(t,g)});Promise.race([t,e]).then(function(){clearTimeout(v),h(p)},function(){f(p)})}else n=function(){function n(){var e;(e=-1!=o&&-1!=l||-1!=o&&-1!=r||-1!=l&&-1!=r)&&((e=o!=l&&o!=r&&l!=r)||(null===C&&(e=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent),C=!!e&&(parseInt(e[1],10)<536||536===parseInt(e[1],10)&&parseInt(e[2],10)<=11)),e=C&&(o==t&&l==t&&r==t||o==d&&l==d&&r==d||o==c&&l==c&&r==c)),e=!e),e&&(u.parentNode&&u.parentNode.removeChild(u),clearTimeout(v),h(p))}var i=new w(m),s=new w(m),a=new w(m),o=-1,l=-1,r=-1,t=-1,d=-1,c=-1,u=document.createElement("div");u.dir="ltr",y(i,x(p,"sans-serif")),y(s,x(p,"serif")),y(a,x(p,"monospace")),u.appendChild(i.a),u.appendChild(s.a),u.appendChild(a.a),document.body.appendChild(u),t=i.a.offsetWidth,d=s.a.offsetWidth,c=a.a.offsetWidth,function e(){if((new Date).getTime()-b>=g)u.parentNode&&u.parentNode.removeChild(u),f(p);else{var t=document.hidden;!0!==t&&void 0!==t||(o=i.a.offsetWidth,l=s.a.offsetWidth,r=a.a.offsetWidth,n()),v=setTimeout(e,50)}}(),_(i,function(e){o=e,n()}),y(i,x(p,'"'+p.family+'",sans-serif')),_(s,function(e){l=e,n()}),y(s,x(p,'"'+p.family+'",serif')),_(a,function(e){r=e,n()}),y(a,x(p,'"'+p.family+'",monospace'))},document.body?n():document.addEventListener?document.addEventListener("DOMContentLoaded",function e(){document.removeEventListener("DOMContentLoaded",e),n()}):document.attachEvent("onreadystatechange",function e(){"interactive"!=document.readyState&&"complete"!=document.readyState||(document.detachEvent("onreadystatechange",e),n())});var n})},"object"==typeof module?module.exports=e:(window.FontFaceObserver=e,window.FontFaceObserver.prototype.load=e.prototype.load)}(),function(n){n(document).ready(function(){n(".nist-expandable-help input").each(function(){var e=n(this).attr("id").replace("edit-submitted-",""),t=n("."+("webform-component--"+e+"-help")).first();t.addClass("nist-expandable-help__text").hide(),n(this).parent().append('<a href="#" class="nist-expandable-help__button"><svg class="icon icon-question-circle"><use xlink:href="#icon-question-circle"></use></svg><span class="element-invisible">More information</span></a>'),n(this).parent().append(t)}),n(".nist-expandable-help__button").click(function(e){e.preventDefault(),n(this).toggleClass("is-open"),n(this).siblings(".nist-expandable-help__text").slideToggle()})})}(jQuery),function(i){function e(){i("iframe").each(function(){var e=i(this).parent().width();e-=2,i(this).width(e).height(e*i(this).data("ratio"))})}i(document).ready(function(){i("iframe").each(function(){i(this).data("ratio",.562);var e=parseFloat(this.height),t=parseFloat(this.width);if(!i(this).hasClass("kmsembed")){var n={minHeight:e,minWidth:t};i(this).css(n),i(this).wrap("<div class='iframe-overflow'></div>")}i.isNumeric(e)&&i.isNumeric(t)&&i(this).data("ratio",e/t).removeAttr("width").removeAttr("height")}),e(),i(window).resize(function(){i("iframe").length&&e()})}),window.onload=function(){i("iframe").length&&e()}}(jQuery),function(s){function n(){s(".media-element-container, .file").each(function(){var e=s(this).find("img[class!=file-icon]");if(void 0!==e&&void 0!==e[0]){var t=new Image;t.src=e.attr("src");var n=t.width,i=(t.height,e.attr("width"));"0"!=i&&i<n&&(n=i),"0"!=n&&s(this).css("width",n+"px")}})}Drupal.behaviors.imageContainer={attach:function(e,t){n()}},s(window).load(function(){n()})}(jQuery),function(A){A.fn.columnize=function(j){this.cols=[],this.offset=0,this.before=[],this.lastOther=0,this.prevMax=0,this.debug=0,this.setColumnStart=null;var a={width:400,columns:!1,buildOnce:!1,overflow:!1,doneFunc:function(){},target:!1,ignoreImageLoading:!(this.elipsisText=""),columnFloat:"left",lastNeverTallest:!1,accuracy:!1,precise:!1,manualBreaks:!1,cssClassPrefix:"",elipsisText:"...",debug:0};function O(t,n){try{t.append(n)}catch(e){t[0].appendChild(n[0])}}return"string"==typeof(j=A.extend(a,j)).width&&(j.width=parseInt(j.width,10),isNaN(j.width)&&(j.width=a.width)),"function"==typeof j.setColumnStart&&(this.setColumnStart=j.setColumnStart),"string"==typeof j.elipsisText&&(this.elipsisText=j.elipsisText),j.debug&&(this.debug=j.debug),j.setWidth||(j.precise?j.setWidth=function(e){return 100/e}:j.setWidth=function(e){return Math.floor(100/e)}),this.each(function(){var _=j.target?A(j.target):A(this),C=A(this).height(),x=A("<div></div>"),k=0,T=j.manualBreaks,i=a.cssClassPrefix;"string"==typeof j.cssClassPrefix&&(i=j.cssClassPrefix);var e,t;if(O(x,A(this).contents().clone(!0)),!j.ignoreImageLoading&&!j.target&&!_.data("imageLoaded")&&(_.data("imageLoaded",!0),0<A(this).find("img").length)){var n=(e=A(this),t=x,function(){e.data("firstImageLoaded")||(e.data("firstImageLoaded","true"),O(e.empty(),t.children().clone(!0)),e.columnize(j))});return A(this).find("img").one("load",n),void A(this).find("img").one("abort",n)}function S(e,t){var n=t?".":"";return i.length?n+i+"-"+e:n+e}function D(e,t,n,i){for(;(T||n.height()<i)&&t[0].childNodes.length;){var s=t[0].childNodes[0];if(A(s).find(S("columnbreak",!0)).length)return;if(A(s).hasClass(S("columnbreak")))return;O(e,A(s))}if(0!==e[0].childNodes.length){var a=e[0].childNodes,o=a[a.length-1];e[0].removeChild(o);var l=A(o);if(3==l[0].nodeType){var r,d=l[0].nodeValue,c=j.width/18;j.accuracy&&(c=j.accuracy);for(var u=null;n.height()<i&&d.length;){var h=d.indexOf(" ",c);r=-1!=h?d.substring(0,h):d,u=document.createTextNode(r),O(e,A(u)),d=d.length>c&&-1!=h?d.substring(h):""}if(n.height()>=i&&null!==u&&(e[0].removeChild(u),d=u.nodeValue+d),!d.length)return!1;l[0].nodeValue=d}return t.contents().length?t.prepend(l):O(t,l),3==l[0].nodeType}}function I(e,t,n,i){if(!e.contents(":last").find(S("columnbreak",!0)).length&&!e.contents(":last").hasClass(S("columnbreak"))&&t.contents().length){var s=t.contents(":first");if(void 0===s.get(0)||1!=s.get(0).nodeType)return;var a=s.clone(!0);if(s.hasClass(S("columnbreak")))O(e,a),s.remove();else if(T)O(e,a),s.remove();else if(1==a.get(0).nodeType&&!a.hasClass(S("dontend")))if(O(e,a),a.is("img")&&n.height()<i+20)s.remove();else if(s.hasClass(S("dontsplit"))&&n.height()<i+20)s.remove();else if(a.is("img")||s.hasClass(S("dontsplit")))a.remove();else{if(a.empty(),D(a,s,n,i))s.addClass(S("split"));else{if(s.addClass(S("split")),"OL"==s.get(0).tagName){var o=a.get(0).childElementCount+a.get(0).start;s.attr("start",o+1)}s.children().length&&I(a,s,n,i)}if(0===a.get(0).childNodes.length)a.remove(),s.removeClass(S("split"));else if(1==a.get(0).childNodes.length){var l=a.get(0).childNodes[0];if(3==l.nodeType){var r=l.nodeValue;/\s/.test(r)&&(a.remove(),s.removeClass(S("split")))}}}}}function N(e){return 3==e.nodeType?!!/^\s+$/.test(e.nodeValue)&&(!!e.previousSibling&&N(e.previousSibling)):1==e.nodeType&&(!!A(e).hasClass(S("dontend"))||0!==e.childNodes.length&&N(e.childNodes[e.childNodes.length-1]))}function s(){if(0,k!=_.width()){k=_.width();var e=Math.round(_.width()/j.width),t=j.width,n=j.height;if(j.columns&&(e=j.columns),T&&(e=x.find(S("columnbreak",!0)).length+1,t=!1),e<=1)return function(){if(!_.data("columnized")||1!=_.children().length){if(_.data("columnized",!0),_.data("columnizing",!0),_.empty(),_.append(A("<div class='"+S("first")+" "+S("last")+" "+S("column")+" ' style='width:100%; float: "+j.columnFloat+";'></div>")),$col=_.children().eq(_.children().length-1),$destroyable=x.clone(!0),j.overflow){for(targetHeight=j.overflow.height,D($col,$destroyable,$col,targetHeight),$destroyable.contents().find(":first-child").hasClass(S("dontend"))||I($col,$destroyable,$col,targetHeight);$col.contents(":last").length&&N($col.contents(":last").get(0));){var e=$col.contents(":last");e.remove(),$destroyable.prepend(e)}for(var t="",n=document.createElement("DIV");0<$destroyable[0].childNodes.length;){var i=$destroyable[0].childNodes[0];if(i.attributes)for(var s=0;s<i.attributes.length;s++)0===i.attributes[s].nodeName.indexOf("jQuery")&&i.removeAttribute(i.attributes[s].nodeName);n.innerHTML="",n.appendChild($destroyable[0].childNodes[0]),t+=n.innerHTML}A(j.overflow.id)[0].innerHTML=t}else O($col,$destroyable.contents());_.data("columnizing",!1),j.overflow&&j.overflow.doneFunc&&j.overflow.doneFunc(),j.doneFunc()}}();if(!_.data("columnizing")){_.data("columnized",!0),_.data("columnizing",!0),_.empty(),_.append(A("<div style='width:"+j.setWidth(e)+"%; float: "+j.columnFloat+";'></div>")),O(d=_.children(":last"),x.clone()),C=d.height(),_.empty();var i=C/e,s=3,a=!1;j.overflow?(s=1,i=j.overflow.height):n&&t&&(s=1,i=n,a=!0);for(var o=0;o<s&&o<20;o++){var l,r,d,c;_.empty();try{l=x.clone(!0)}catch(e){l=x.clone()}l.css("visibility","hidden");for(var u=0;u<e;u++)r=0===u?S("first"):"",r+=" "+S("column"),r=u==e-1?S("last")+" "+r:r,_.append(A("<div class='"+r+"' style='width:"+j.setWidth(e)+"%; float: "+j.columnFloat+";'></div>"));for(u=0;u<e-(j.overflow?0:1)||a&&l.contents().length;){for(_.children().length<=u&&_.append(A("<div class='"+r+"' style='width:"+j.setWidth(e)+"%; float: "+j.columnFloat+";'></div>")),d=_.children().eq(u),a&&d.width(t+"px"),D(d,l,d,i),I(d,l,d,i);d.contents(":last").length&&N(d.contents(":last").get(0));)(c=d.contents(":last")).remove(),l.prepend(c);u++,0===d.contents().length&&l.contents().length?d.append(l.contents(":first")):u!=e-(j.overflow?0:1)||j.overflow||l.find(S("columnbreak",!0)).length&&e++}if(j.overflow&&!a){if(document.all&&-1!=navigator.appVersion.indexOf("MSIE 7.")){for(var h="",f=document.createElement("DIV");0<l[0].childNodes.length;){var p=l[0].childNodes[0];for(u=0;u<p.attributes.length;u++)0===p.attributes[u].nodeName.indexOf("jQuery")&&p.removeAttribute(p.attributes[u].nodeName);f.innerHTML="",f.appendChild(l[0].childNodes[0]),h+=f.innerHTML}A(j.overflow.id)[0].innerHTML=h}else A(j.overflow.id).empty().append(l.contents().clone(!0))}else if(a)_.children().each(function(e){(d=_.children().eq(e)).width(t+"px"),0===e?d.addClass(S("first")):e==_.children().length-1?d.addClass(S("last")):(d.removeClass(S("first")),d.removeClass(S("last")))}),_.width(_.children().length*t+"px");else{d=_.children().eq(_.children().length-1),l.contents().each(function(){d.append(A(this))});d.height();var m=0,v=1e7,g=0,b=!1,w=0;_.children().each(function(i){return function(e){var t=i.children().eq(e);if(!t.children(":last").find(S("columnbreak",!0)).length){var n=t.height();b=!1,m+=n,g<n&&(g=n,b=!0),n<v&&(v=n),w++}}}(_));var y=m/w;0===m?o=s:j.lastNeverTallest&&b?(5,i+=5,o==s-1&&s++):30<g-v?i=y+30:20<Math.abs(y-i)?i=y:o=s}_.append(A("<br style='clear:both;'>"))}_.find(S("column",!0)).find(":first"+S("removeiffirst",!0)).remove(),_.find(S("column",!0)).find(":last"+S("removeiflast",!0)).remove(),_.find(S("split",!0)).find(":first"+S("removeiffirst",!0)).remove(),_.find(S("split",!0)).find(":last"+S("removeiflast",!0)).remove(),_.data("columnizing",!1),j.overflow&&j.overflow.doneFunc(),j.doneFunc()}}}_.empty(),s(),j.buildOnce||A(window).resize(function(){j.buildOnce||(_.data("timeout")&&clearTimeout(_.data("timeout")),_.data("timeout",setTimeout(s,200)))})})},A.fn.renumberByJS=function(e,t,n,i){if(this.setList=function(e,t,n){var i,s=this.before.parents();if((i=A(e[this.offset-1]).find(">*")).last()[0].tagName!=n.toUpperCase())return this.debug&&console.log("Last item in previous column, isn't a list..."),0;i=i.length;var a,o=1;if(o=this.lastOther<=0?this.before.children().length+1:A(s[this.lastOther]).children().length+1,A(e[this.offset]).find(n+":first li.split").length){var l=A(e[this.offset-1]).find(n+":last li:last");if(""===this.elipsisText||A(e[this.offset-1]).find(n+":last ~ div").length||A(e[this.offset-1]).find(n+":last ~ p").length);else if(0==A(l).find("ul, ol, dl").length){var r=l.last().text(),d=r.length;";"==r.substring(d-1)?r.substring(d-4)!=this.elipsisText+";"&&(r=r.substring(0,d-1)+this.elipsisText+";"):r.substring(d-3)!=this.elipsisText&&(r+=this.elipsisText),l.last().text(r)}0==A(e[this.offset]).find(n+":first >li.split >"+n).length&&o--}(1==i&&(o+=this.prevMax),1<this.nest)?(this.debug&&console.log("Supposed to be a nested list...decr"),o--,0<(a=A(e[this.offset-1]).find(n+":first li.split:first")).length&&(this.debug&&console.log("Previous column started with a split item, so that count is one less than expected"),o--),(a=A(e[this.offset]).find(n+":first li:first").clone()).children().remove(),0<A.trim(a.text()).length&&(this.debug&&console.log("If that was a complete list in the previous column, don't decr."),o++,0==A(e[this.offset-1]).find(">"+n+":last ").children().length&&(this.debug&&console.log("unless that was empty, in which case revert"),o--))):0<(a=A(e[this.offset]).find(n+":first li:first "+n+".split li.split")).length&&(this.debug&&console.log("[Nested] Column started with a split item, so that count is one less than expected"),o--);return this.debug&&console.log("Setting the start value to "+o+" ("+this.prevMax+")"),0<o&&("function"==typeof this.setColumnStart?this.setColumnStart(t,o):t.attr("start",o)),0},void 0===n&&(n=!1),void 0===i&&(i=!1),!n&&!i)throw"renumberByJS(): Bad param, must pass an id or a class";var s="";this.prevMax=1,s=i?"."+i:"#"+n;var a=e.toLowerCase(),o=e.toUpperCase();for(this.cols=A(s),this.debug&&console.log("There are "+this.cols.length+" items, looking for "+a),this.before=A(this.cols[0]).find(a+":last"),this.prevMax=this.before.children().length,this.offset=1;this.offset<this.cols.length;this.offset++)if(this.debug&&console.log("iterating "+this.offset+"...[of "+this.cols.length+"]"),this.offset%t!=0){if(this.before=A(this.cols[this.offset-1]).find(a+":last"),this.before.length){this.debug&&console.log("Have some "+e+" elements in the previous column");var l=A(this.cols[this.offset]).find(a+":first");if(A(this.cols[this.offset]).find("*:first")[0]!==l[0])continue;var r=this.before.parents();this.lastOther=0;for(;this.lastOther<r.length;this.lastOther++)if(r[this.lastOther].tagName!=o&&"LI"!=r[this.lastOther].tagName){!0,this.lastOther--;break}this.nest=1,A(this.cols[this.offset]).find(">"+a+":first li "+a+":first").length&&(this.nest=2),this.setList(this.cols,l,a),this.lastOther--,(l=A(this.cols[this.offset]).find(a+":first li "+a+":first")).length&&(this.before=A(this.cols[this.offset-1]).find(">"+a+":last li "+a+":last"),this.prevMax=0,this.nest=1,this.setList(this.cols,l,a));var d=A(this.cols[this.offset-1]).find(">"+a+":last");this.prevMax=d.children().length}}else this.debug&&console.log("First column (in theory..)"),this.prevMax=1;return 0}}(jQuery);var FORMALIZE=function(i,e,n){function t(e){var t=n.createElement("b");return t.innerHTML="\x3c!--[if IE "+e+"]><br><![endif]--\x3e",!!t.getElementsByTagName("br").length}var s="placeholder"in n.createElement("input"),a="autofocus"in n.createElement("input"),o=t(6),l=t(7);return{go:function(){var e,t=this.init;for(e in t)t.hasOwnProperty(e)&&t[e]()},init:{disable_link_button:function(){i(n.documentElement).delegate("a.button_disabled","click",function(){return!1})},full_input_size:function(){l&&i("textarea, input.input_full").length&&i("textarea, input.input_full").wrap('<span class="input_full_wrap"></span>')},ie6_skin_inputs:function(){if(o&&i("input, select, textarea").length){var t=/button|submit|reset/,n=/date|datetime|datetime-local|email|month|number|password|range|search|tel|text|time|url|week/;i("input").each(function(){var e=i(this);this.getAttribute("type").match(t)?(e.addClass("ie6_button"),this.disabled&&e.addClass("ie6_button_disabled")):this.getAttribute("type").match(n)&&(e.addClass("ie6_input"),this.disabled&&e.addClass("ie6_input_disabled"))}),i("textarea, select").each(function(){this.disabled&&i(this).addClass("ie6_input_disabled")})}},autofocus:function(){if(!a&&i(":input[autofocus]").length){var e=i("[autofocus]")[0];e.disabled||e.focus()}},placeholder:function(){!s&&i(":input[placeholder]").length&&(FORMALIZE.misc.add_placeholder(),i(":input[placeholder]").each(function(){if("password"!==this.type){var e=i(this),t=e.attr("placeholder");e.focus(function(){e.val()===t&&e.val("").removeClass("placeholder_text")}).blur(function(){FORMALIZE.misc.add_placeholder()}),e.closest("form").submit(function(){e.val()===t&&e.val("").removeClass("placeholder_text")}).bind("reset",function(){setTimeout(FORMALIZE.misc.add_placeholder,50)})}}))}},misc:{add_placeholder:function(){!s&&i(":input[placeholder]").length&&i(":input[placeholder]").each(function(){if("password"!==this.type){var e=i(this),t=e.attr("placeholder");e.val()&&e.val()!==t||e.val(t).addClass("placeholder_text")}})}}}}(jQuery,0,this.document);jQuery(document).ready(function(){FORMALIZE.go()}),function(e){e(document).ready(function(){new FontFaceObserver("Source Sans Pro",{weight:400}).load().then(function(){console.log("Font is available"),e("html").addClass("font")},function(){console.log("Font is not available"),e("html").addClass("no-font")})})}(jQuery),function(n){Drupal.behaviors.magnific={attach:function(e,t){n(".lightbox").magnificPopup({delegate:"a.lightbox__trigger",type:"image",gallery:{enabled:!0},image:{markup:'<div class="mfp-figure"><div class="mfp-close"></div><div class="mfp-img"></div><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></div>',cursor:"mfp-zoom-out-cur",titleSrc:function(e){var t="";e.el.siblings(".field--image-caption").length&&(t+='<div class="mfp-title-caption">'+e.el.siblings(".field--image-caption").html()+"</div>");e.el.siblings(".field--credit").length&&(t+='<div class="mfp-title-credit">'+e.el.siblings(".field--credit").html()+"</div>");return t+='<div class="mfp-title-links">'+e.el.siblings(".lightbox__links").html()+"</div>"},verticalFit:!0,tError:'<a href="%url%">The image</a> could not be loaded.'}}),n(".lightbox-iframe").magnificPopup({delegate:"a.lightbox-iframe__trigger",type:"iframe",iframe:{markup:'<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" frameborder="0" allowfullscreen></iframe><div class="mfp-title">Some caption</div></div>',patterns:{youtube:{index:"youtube.com/",id:"v=",src:"//www.youtube.com/embed/%id%?autoplay=1"},vimeo:{index:"vimeo.com/",id:"/",src:"//player.vimeo.com/video/%id%?autoplay=1"},gmaps:{index:"//maps.google.",src:"%id%&output=embed"},kaltura:{index:"www.kaltura.com/",id:"entry_id=",src:"//www.kaltura.com/p/684682/sp/68468200/embedIframeJs/uiconf_id/31013851/partner_id/684682?iframeembed=true&entry_id=%id%"}},srcAction:"iframe_src"},callbacks:{markupParse:function(e,t,n){t.title=n.el.attr("href"),t.title='<a class="button" href="'+t.title+'">More info</a>'}}})}}}(jQuery),function(s){function t(){s(".menu--main-menu--new .is-open").removeClass("is-open"),s(".menu--main-menu--new .is-focused").removeClass("is-focused")}s(document).ready(function(){s(".menu--main-menu--new li.menu-depth-1").focusin(function(){s(".menu--main-menu--new li.menu-depth-1").removeClass("is-focused"),s(this).closest("li.menu-depth-1").addClass("is-focused")}),s(".menu--main-menu--new li.menu-depth-1").focusout(function(){s(".menu--main-menu--new li.menu-depth-1").removeClass("is-focused")}),s(".menu--main-menu--new__submenu").each(function(){s(this).find("> .menu").wrapInner('<div class="column-container"><div class="column">')}),s(".mobile-toggle--menu").click(function(e){e.preventDefault(),s("body").hasClass("has-mobile-menu")?s("#navigation .block--menu-block").slideUp(300,function(){s("body").removeClass("has-mobile-menu")}):(s("body").addClass("has-mobile-menu"),s("#navigation .block--menu-block").slideDown(300))}),s(".mobile-toggle--menu > a").focus(function(){s("body").addClass("focus-mobile-menu"),s("#navigation .block--menu-block").slideDown(300)}),s("#main").focusin(function(){s(".focus-mobile-menu #navigation .block--menu-block").slideUp(300,function(){s("body").removeClass("focus-mobile-menu"),s("body").removeClass("has-mobile-menu"),t()})})}),s(window).load(function(){s(".menu--main-menu--new__submenu").on("click",".menu--main-menu--new__close",function(e){e.preventDefault(),t()}),s(document).keyup(function(e){27==e.keyCode&&t()}),s(document).keyup(function(e){13==e.keyCode&&s(".menu--main-menu--new__close").is(":focus")&&t()}),s(".menu--main-menu--new__submenu").each(function(){var e=s(this).find(".column-break").length,t=0;switch(e){case 0:for(s(this).find(".column-container").addClass("has-one-column").prepend('<span tabindex="0" class="menu--main-menu--new__close">Close</span>'),s(this).addClass("one-column"),t=0;t<e;t++){var n=s(this).find(".column-container .column-break").eq(t);s("<div class='column'>").insertAfter(n.parent()).append(n.nextAll().andSelf())}break;case 1:for(s(this).find(".column-container").addClass("has-two-columns").prepend('<span tabindex="0" class="menu--main-menu--new__close">Close</span>'),t=0;t<e;t++){n=s(this).find(".column-container .column-break").eq(t);s("<div class='column'>").insertAfter(n.parent()).append(n.nextAll().andSelf())}break;case 2:var i=s(this).find(".column-container");for(s(i).addClass("has-three-columns").prepend('<span tabindex="0" class="menu--main-menu--new__close">Close</span>'),t=0;t<e;t++){n=s(this).find(".column-container .column-break").eq(t);s("<div class='column'>").insertAfter(n.parent()).append(n.nextAll().andSelf())}break;case 3:for(s(this).find(".column-container").addClass("has-four-columns").prepend('<span tabindex="0" class="menu--main-menu--new__close">Close</span>'),t=0;t<e;t++){n=s(this).find(".column-container .column-break").eq(t);s("<div class='column'>").insertAfter(n.parent()).append(n.nextAll().andSelf())}}})})}(jQuery),function(s){s(document).ready(function(){s(".menu--columns").each(function(){s(this).find("> .menu-block-wrapper > .menu").wrapInner('<div class="nist-grid"><div class="nist-grid__item">')})}),s(window).load(function(){s(".menu--columns > .menu-block-wrapper > .menu").each(function(){var e=s(this).find(".column-break").length,t=0;switch(e){case 0:for(s(this).find(".nist-grid").addClass("nist-grid--1up"),t=0;t<e;t++){var n=s(this).find(".nist-grid .column-break").eq(t);s("<div class='nist-grid__item'>").insertAfter(n.parent()).append(n.nextAll().andSelf())}break;case 1:for(s(this).find(".nist-grid").addClass("nist-grid--2up"),t=0;t<e;t++){n=s(this).find(".nist-grid .column-break").eq(t);s("<div class='nist-grid__item'>").insertAfter(n.parent()).append(n.nextAll().andSelf())}break;case 2:var i=s(this).find(".nist-grid");for(s(i).addClass("nist-grid--3up"),t=0;t<e;t++){n=s(this).find(".nist-grid .column-break").eq(t);s("<div class='nist-grid__item'>").insertAfter(n.parent()).append(n.nextAll().andSelf())}break;case 3:for(s(this).find(".nist-grid").addClass("nist-grid--4up"),t=0;t<e;t++){n=s(this).find(".nist-grid .column-break").eq(t);s("<div class='nist-grid__item'>").insertAfter(n.parent()).append(n.nextAll().andSelf())}}})})}(jQuery),function(i){Drupal.behaviors.menuTree={attach:function(e,t){function n(e){e.blur();var t=e.closest("li");return t.hasClass("is-open")?(t.find("ul, .menu--main-menu--new__submenu").first().slideUp(),t.removeClass("is-open")):(i(".menu--main-menu--new__submenu").slideUp(),i(".menu--main-menu--new .menu-depth-1").removeClass("is-open"),t.find("ul, .menu--main-menu--new__submenu").first().slideDown(),t.addClass("is-open")),!1}i(".expandable li:has(ul)").children("a").append(' <span class="expander"><svg class="icon icon-plus"><use xlink:href="#icon-plus"></use></svg><svg class="icon icon-minus"><use xlink:href="#icon-minus"></use></svg><span class="element-invisible">Expand or Collapse</span></span>'),i(".expandable a.active").parents("li").addClass("is-active-trail"),n(i("li.is-active-trail > a .expander")),i(".expander").click(function(e){e.preventDefault(),n(i(this))})}},i(document).keyup(function(e){13==e.keyCode&&i(".expander").is(":focus")&&expandCollapse(i(".expander:focus"))})}(jQuery),function(s){s(document).ready(function(){s(".field--body svg").once("wrapSVG",function(){s(this).each(function(e,t){s(t).wrap('<div class="nist-svg__wrapper"></div>')})}),s(".nist-svg--scalable").once("scalable",function(){s(this).each(function(e,t){var n=t.viewBox.baseVal,i=n.height/n.width*100;s(t).parent().addClass("nist-svg__wrapper--scalable"),s(t).parent().css("padding-bottom",i+"%")})}),s("svg a").each(function(t,e){if(s(this).attr("data-nist-svg-tooltip")){var n=s(this).attr("data-nist-svg-tooltip");s(this).closest(".nist-svg__wrapper").append('<div class="nist-svg__tooltip nist-svg__tooltip--'+t+'"><div class="nist-svg__tooltip-content">'+n+'</div><span class="nist-svg__tooltip-close fa fa-close"><span class="element-invisible">Close</span></span></div>'),s(this).click(function(e){e.preventDefault(),s(this).closest(".nist-svg__wrapper").find(".nist-svg__tooltip--"+t).addClass("is-open").fadeIn()})}s(this).attr("data-nist-show")&&s(this).click(function(e){e.preventDefault();var t=s(this).attr("data-nist-show"),n=s("[data-nist-element='"+t+"']");s(this).closest(".nist-svg__wrapper").find("[data-nist-element]").fadeOut(),n.fadeIn()})}),s(".nist-svg__tooltip-close").click(function(e){e.preventDefault(),s(this).closest(".nist-svg__tooltip").removeClass("is-open").fadeOut()}),s("[data-nist-element]").click(function(){s(this).hide()})})}(jQuery),function(e){e(document).ready(function(){})}(jQuery),function(s){s(document).ready(function(){var e;function i(e){""==s(e).find("input").val()&&s(e).find(".form-item").addClass("empty")}e=[".primary-filter"],s.each(e,function(e,t){var n=s(t).length;1==n&&(i(t),s(t).find("input").focusin(function(){s(t).find(".form-item").removeClass("empty")}),s(t).find("input").focusout(function(){i(t)}))})})}(jQuery),function(d){d(document).ready(function(){function e(){d(".table-inner").each(function(e,t){d(t).parent().removeClass("overflow").attr("style",""),d(t).siblings(".table-overflow").remove();var n=d(t).overflown_width(),i=d(t).height(),s=d(t).width(),a=d(t).children("table").width(),o=d(window).width(),l=a+2;o<=l&&(l=o-52);var r=0;if(1400<=l)r=0-(r=(l-1168)/2);if((l<1400||s<1168)&&(l=s),1==n)if(1400<=l&&d(t).parent().addClass("overflow").css({height:i+2,width:l,left:r}),l+20<a){d(t).after('<div class="table-overflow">Scroll <span class="fa fa-arrow-right"></span></div>');d(t).parent().scroll(function(){0<d(t).parent().scrollLeft()&&d(t).siblings(".table-overflow").hide()})}else d(t).parent(".table-wrapper").css("overflow","visible")})}d("table").once("wrapTable",function(){d(this).each(function(e,t){d(t).wrap('<div class="table-wrapper"><div class="table-inner"></div></div>')})}),d.fn.overflown_width=function(){var e=this[0];return e.scrollWidth>e.clientWidth},d(window).load(function(){e()}),d(window).resize(function(){e()})})}(jQuery),function(e){e(document).ready(function(){0!=e(".group-publication-authors").find(".field--nist-authors").length&&0!=e(".group-publication-authors").find(".field--non-nist-authors").length&&e(".group-publication-authors .field--nist-authors .textformatter-list").append(", ")}),e(document).ready(function(){e(".megamenu-fake-link").click(function(e){e.preventDefault()})}),e(document).ready(function(){e("#block-gtranslate-gtranslate select").attr("name","google_translate").attr("id","google_translate").before('<label class="element-invisible" for="google_translate">Translate</label>')}),e(document).ready(function(){e(".panel-region--left-sidebar fieldset.collapsible").removeClass("collapsed")}),e(document).ready(function(){e("#cboxPrevious").append("Prev</button>"),e("#cboxPrevious").attr("value","Previous Item"),e("#cboxNext").append("Next</button>"),e("#cboxNext").attr("value","Next Item"),e("#cboxSlideshow").append("Slideshow</button>"),e("#cboxSlideshow").attr("value","Slideshow")}),e(document).ready(function(){e("html").removeClass("no-js").addClass("js")})}(jQuery),function(n){n(document).ready(function(){n("a[href*=#]:not([href=#],.no-scroll)").click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")||location.hostname==this.hostname){var e=n(this.hash),t=0;if(n("body").hasClass("navbar-administration")&&(t+=39),n("body").hasClass("section-featured-stories")&&(t+=60),(e=e.length?e:n("[name="+this.hash.slice(1)+"]")).length)return n("html,body").animate({scrollTop:e.offset().top-t},500),!1}})}),n(window).scroll(function(){var e=n(window).scrollTop();100<=e&&n("body").addClass("is-scrolled"),e<100&&n("body").removeClass("is-scrolled")})}(jQuery),function(n){Drupal.behaviors.sod={attach:function(e,t){n("#main select:not([multiple])").not("#edit-term-node-tid-depth,#edit-term-node-tid-depth-1,.no-sod,.no-sod select").selectOrDie({customClass:"standard-select",size:10})}},n(window).load(function(){var e=n(".panel-region--left-sidebar .views-widget-filter-secondary").width();n(".panel-region--left-sidebar .sod_select").css("width",e-40+"px"),n(".panel-region--left-sidebar .sod_list_wrapper").css("width",e-40+"px")}),n(window).resize(function(){var e=n(".panel-region--left-sidebar .views-widget-filter-secondary").width();n(".panel-region--left-sidebar .sod_select").css("width",e-40+"px"),n(".panel-region--left-sidebar .sod_list_wrapper").css("width",e-40+"px")})}(jQuery),function(C){"use strict";C.fn.selectOrDie=function(e){var c,o,t={customID:null,customClass:"",placeholder:null,placeholderOption:!1,prefix:null,cycle:!1,stripEmpty:!1,links:!1,linksExternal:!1,size:0,tabIndex:0,onChange:C.noop},y={},u=!1,_={initSoD:function(e){return y=C.extend({},t,e),this.each(function(){if(C(this).parent().hasClass("sod_select"))console.log("Select or Die: It looks like the SoD already exists");else{var n,e,i,t=C(this),s=t.data("custom-id")?t.data("custom-id"):y.customID,a=t.data("custom-class")?t.data("custom-class"):y.customClass,o=t.data("prefix")?t.data("prefix"):y.prefix,l=t.data("placeholder")?t.data("placeholder"):y.placeholder,r=t.data("placeholder-option")?t.data("placeholder-option"):y.placeholderOption,d=t.data("cycle")?t.data("cycle"):y.cycle,c=t.data("links")?t.data("links"):y.links,u=t.data("links-external")?t.data("links-external"):y.linksExternal,h=parseInt(t.data("size"))?t.data("size"):y.size,f=parseInt(t.data("tabindex"))?t.data("tabindex"):y.tabIndex?y.tabIndex:t.attr("tabindex")?t.attr("tabindex"):y.tabIndex,p=t.data("strip-empty")?t.data("strip-empty"):y.stripEmpty,m=t.prop("title")?t.prop("title"):null,v=t.is(":disabled")?" disabled":"",g="",b="",w=0;o&&(g='<span class="sod_prefix">'+o+"</span> "),n=C("<span/>",{id:s,class:"sod_select "+a+v,title:m,tabindex:f,html:b+=l&&!o?'<span class="sod_label sod_placeholder">'+l+"</span>":'<span class="sod_label">'+g+"</span>","data-cycle":d,"data-links":c,"data-links-external":u,"data-placeholder":l,"data-placeholder-option":r,"data-prefix":o,"data-filter":""}).insertAfter(this),_.isTouch()&&n.addClass("touch"),e=C("<span/>",{class:"sod_list_wrapper"}).appendTo(n),i=C("<span/>",{class:"sod_list"}).appendTo(e),C("option, optgroup",t).each(function(e){var t=C(this);p&&!C.trim(t.text())?t.remove():0===e&&r&&!g?_.populateSoD(t,i,n,!0):_.populateSoD(t,i,n,!1)}),h&&(e.show(),C(".sod_option:lt("+h+")",i).each(function(){w+=C(this).outerHeight()}),e.removeAttr("style"),i.css({"max-height":w})),t.appendTo(n),n.on("focusin",_.focusSod).on("click",_.triggerSod).on("click",".sod_option",_.optionClick).on("mousemove",".sod_option",_.optionHover).on("keydown",_.keyboardUse),t.on("change",_.selectChange),C(document).on("click","label[for='"+t.attr("id")+"']",function(e){e.preventDefault(),n.focus()})}})},populateSoD:function(e,t,n,i){var s=n.data("placeholder"),a=n.data("placeholder-option"),o=n.data("prefix"),l=n.find(".sod_label"),r=e.parent(),d=e.text(),c=e.val(),u=e.data("custom-id")?e.data("custom-id"):null,h=e.data("custom-class")?e.data("custom-class"):"",f=e.is(":disabled")?" disabled ":"",p=e.is(":selected")?" selected active ":"",m=e.data("link")?" link ":"",v=e.data("link-external")?" linkexternal":"",g=e.prop("label");e.is("option")?(C("<span/>",{class:"sod_option "+h+f+p+m+v,id:u,title:d,html:d,"data-value":c}).appendTo(t),i&&!o?(n.data("label",d),n.data("placeholder",d),e.prop("disabled",!0),t.find(".sod_option:last").addClass("is-placeholder disabled"),p&&l.addClass("sod_placeholder")):p&&s&&!a&&!o?n.data("label",s):p&&n.data("label",d),(p&&!s||p&&a||p&&o)&&l.append(d),r.is("optgroup")&&(t.find(".sod_option:last").addClass("groupchild"),r.is(":disabled")&&t.find(".sod_option:last").addClass("disabled"))):C("<span/>",{class:"sod_option optgroup "+f,title:g,html:g,"data-label":g}).appendTo(t)},focusSod:function(){var e=C(this);e.hasClass("disabled")?_.blurSod(e):(_.blurSod(C(".sod_select.focus").not(e)),e.addClass("focus"),C("html").on("click.sodBlur",function(){_.blurSod(e)}))},triggerSod:function(e){e.stopPropagation();var t=C(this),n=t.find(".sod_list"),i=t.data("placeholder"),s=t.find(".active"),a=t.find(".selected");t.hasClass("disabled")||t.hasClass("open")||t.hasClass("touch")?(clearTimeout(o),t.removeClass("open"),i&&(t.find(".sod_label").get(0).lastChild.nodeValue=s.text())):(t.addClass("open"),i&&!t.data("prefix")&&t.find(".sod_label").addClass("sod_placeholder").html(i),_.listScroll(n,a),_.checkViewport(t,n))},keyboardUse:function(e){var t,n,i,s=C(this),a=s.find(".sod_list"),o=s.find(".sod_option"),l=s.find(".sod_label"),r=s.data("cycle"),d=o.filter(".active");return 36<e.which&&e.which<41?(37===e.which||38===e.which?(n=d.prevAll(":not('.disabled, .optgroup')").first(),i=o.not(".disabled, .optgroup").last()):(39===e.which||40===e.which)&&(n=d.nextAll(":not('.disabled, .optgroup')").first(),i=o.not(".disabled, .optgroup").first()),!n.hasClass("sod_option")&&r&&(n=i),(n.hasClass("sod_option")||r)&&(d.removeClass("active"),n.addClass("active"),l.get(0).lastChild.nodeValue=n.text(),_.listScroll(a,n),s.hasClass("open")||(u=!0)),!1):(13===e.which||32===e.which&&s.hasClass("open")&&(" "===s.data("filter")[0]||""===s.data("filter"))?(e.preventDefault(),d.click()):32!==e.which||s.hasClass("open")||" "!==s.data("filter")[0]&&""!==s.data("filter")?27===e.which&&_.blurSod(s):(e.preventDefault(),u=!1,s.click()),void(0!==e.which&&(clearTimeout(c),s.data("filter",s.data("filter")+String.fromCharCode(e.which)),(t=o.filter(function(){return 0===C(this).text().toLowerCase().indexOf(s.data("filter").toLowerCase())}).not(".disabled, .optgroup").first()).length&&(d.removeClass("active"),t.addClass("active"),_.listScroll(a,t),l.get(0).lastChild.nodeValue=t.text(),s.hasClass("open")||(u=!0)),c=setTimeout(function(){s.data("filter","")},500))))},optionHover:function(){var e=C(this);e.hasClass("disabled")||e.hasClass("optgroup")||e.siblings().removeClass("active").end().addClass("active")},optionClick:function(e){e.stopPropagation();var t=C(this),n=t.closest(".sod_select"),i=t.hasClass("disabled"),s=t.hasClass("optgroup"),a=n.find(".sod_option:not('.optgroup')").index(this);n.hasClass("touch")||(i||s||(n.find(".selected, .sod_placeholder").removeClass("selected sod_placeholder"),t.addClass("selected"),n.find("select option")[a].selected=!0,n.find("select").change()),clearTimeout(o),n.removeClass("open"))},selectChange:function(){var e=C(this),t=e.find(":selected"),n=t.text(),i=e.closest(".sod_select");i.find(".sod_label").get(0).lastChild.nodeValue=n,i.data("label",n),y.onChange.call(this),!i.data("links")&&!t.data("link")||t.data("link-external")?(i.data("links-external")||t.data("link-external"))&&window.open(t.val(),"_blank"):window.location.href=t.val()},blurSod:function(e){if(C("body").find(e).length){var t=e.data("label"),n=e.data("placeholder"),i=e.find(".active"),s=e.find(".selected"),a=!1;clearTimeout(o),u&&!i.hasClass("selected")?(i.click(),a=!0):i.hasClass("selected")||(i.removeClass("active"),s.addClass("active")),!a&&n?e.find(".sod_label").get(0).lastChild.nodeValue=s.text():a||(e.find(".sod_label").get(0).lastChild.nodeValue=t),u=!1,e.removeClass("open focus"),e.blur(),C("html").off(".sodBlur")}},checkViewport:function(e,t){var n=e[0].getBoundingClientRect(),i=t.outerHeight();n.bottom+i+10>C(window).height()&&10<n.top-i?e.addClass("above"):e.removeClass("above"),o=setTimeout(function(){_.checkViewport(e,t)},200)},listScroll:function(e,t){var n=e[0].getBoundingClientRect(),i=t[0].getBoundingClientRect();n.top>i.top?e.scrollTop(e.scrollTop()-n.top+i.top):n.bottom<i.bottom&&e.scrollTop(e.scrollTop()-n.bottom+i.bottom)},isTouch:function(){return"ontouchstart"in window||0<navigator.MaxTouchPoints||0<navigator.msMaxTouchPoints}},n={destroy:function(){return this.each(function(){var e=C(this),t=e.parent();t.hasClass("sod_select")?(e.off("change"),t.find("span").remove(),e.unwrap()):console.log("Select or Die: There's no SoD to destroy")})},update:function(){return this.each(function(){var e=C(this),t=e.parent(),n=t.find(".sod_list:first");t.hasClass("sod_select")?(n.empty(),t.find(".sod_label").get(0).lastChild.nodeValue="",e.is(":disabled")&&t.addClass("disabled"),C("option, optgroup",e).each(function(){_.populateSoD(C(this),n,t)})):console.log("Select or Die: There's no SoD to update")})},disable:function(n){return this.each(function(){var e=C(this),t=e.parent();t.hasClass("sod_select")?void 0!==n?(t.find(".sod_list:first .sod_option[data-value='"+n+"']").addClass("disabled"),t.find(".sod_list:first .sod_option[data-label='"+n+"']").nextUntil(":not(.groupchild)").addClass("disabled"),C("option[value='"+n+"'], optgroup[label='"+n+"']",this).prop("disabled",!0)):t.hasClass("sod_select")&&(t.addClass("disabled"),e.prop("disabled",!0)):console.log("Select or Die: There's no SoD to disable")})},enable:function(n){return this.each(function(){var e=C(this),t=e.parent();t.hasClass("sod_select")?void 0!==n?(t.find(".sod_list:first .sod_option[data-value='"+n+"']").removeClass("disabled"),t.find(".sod_list:first .sod_option[data-label='"+n+"']").nextUntil(":not(.groupchild)").removeClass("disabled"),C("option[value='"+n+"'], optgroup[label='"+n+"']",this).prop("disabled",!1)):t.hasClass("sod_select")&&(t.removeClass("disabled"),e.prop("disabled",!1)):console.log("Select or Die: There's no SoD to enable")})}};return n[e]?n[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void C.error('Select or Die: Oh no! No such method "'+e+'" for the SoD instance'):_.initSoD.apply(this,arguments)}}(jQuery),function(t){t(document).ready(function(){t("#timeline__toggle-timeline").click(function(e){e.preventDefault(),t(this).hasClass("active")||(t(".timeline-list").fadeOut(300,function(){t(".timeline-actual").fadeIn(300)}),t(this).addClass("active"),t("#timeline__toggle-list").removeClass("active"))}),t("#timeline__toggle-list").click(function(e){e.preventDefault(),t(this).hasClass("active")||(t(".timeline-actual").fadeOut(300,function(){t(".timeline-list").fadeIn(300)}),t(this).addClass("active"),t("#timeline__toggle-timeline").removeClass("active"))})})}(jQuery),function(e){e(document).ready(function(){e(".toc__toggle-btn").click(function(){e(".toc").toggleClass("is-open")}),e(".toc__menu a").click(function(){e(".toc").removeClass("is-open")})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
;
;(function ($) {
  Drupal.behaviors.nistStyleFileEntityLinkGa = {
    attach: function (context, settings) {
      var gaEventConfig = {
        category: 'Downloads',
        action: '', // file type
        label: '', // full file url
        value: '0'
      };

      $('.file-entity-link').click(function(event) {
        // Need to manually track file entity link clicks
        // See WWW-1396 in JIRA
        
        var fileUrl = $(this).attr('data-file-url');
        var fileExtension = fileUrl.substr(fileUrl.lastIndexOf('.')+1);

        gaEventConfig.action = fileExtension;
        gaEventConfig.label = fileUrl;

        if (typeof ga !== 'undefined') { 
          // See https://developers.google.com/analytics/devguides/collection/analyticsjs/command-queue-reference#send
          ga('send', 'event', gaEventConfig.category, gaEventConfig.action, gaEventConfig.label, gaEventConfig.value);
        }
      });
    }
  };
})(jQuery);;
