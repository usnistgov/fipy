# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

defaults: &defaults
  working_directory: ~/project

defaults2: &defaults2
  <<: *defaults

  docker:
    - image: continuumio/miniconda2

defaults3: &defaults3
  <<: *defaults

  docker:
    - image: continuumio/miniconda3

commands:
  createenv:
    description: "Create conda environment"

    parameters:
      condaenv:
        type: string
        default: "cache"

      packages:
        type: string
        default: ""

    steps:
      - run:
          name: Create Conda Environment
          command: |
            conda create -v --quiet --prefix << parameters.condaenv >> --show-channel-urls --channel conda-forge --only-deps << parameters.packages >>
            source activate ~/project/<< parameters.condaenv >>
            pip install future
            pip install scikit-fmm

  test_fipy:
    description: "Run FiPy Tests"

    parameters:
      mpirun:
        type: string
        default: ""
      condaenv:
        type: string
        default: "test-environment-27"

    steps:
      - run:
          name: Install libGL
          command: |
            apt-get --yes update
            apt-get --yes install libglu1-mesa
            apt-get --yes install libgl1-mesa-glx
            apt-get --yes install libxrender1

      - checkout

      - restore_conda_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: Run Tests
          no_output_timeout: 30m
          command: |
            source activate ~/project/<< parameters.condaenv >>
            python setup.py egg_info
            if [[ ! -z "${FIPY_INLINE}" ]]; then
              << parameters.mpirun >> python setup.py test > /dev/null 2>&1 || true;
            fi
            << parameters.mpirun >> python setup.py test

      - run:
          name: Output Environment
          command: |
            conda env export --prefix ~/project/<< parameters.condaenv >>

      - store_artifacts:
          path: test-reports
          destination: test-reports

  build_html_docs:
    description: "Build HTML Docs"

    parameters:
      condaenv:
        type: string
        default: "test-environment-27"

    steps:
      - run:
          name: Build Docs
          command: |
            source activate ~/project/<< parameters.condaenv >>
            export ETS_TOOLKIT=null
            python setup.py build_docs --html

      - store_artifacts:
          path: ~/project/documentation/_build/html

  build_pdf_docs:
    description: "Build PDF Docs"

    parameters:
      condaenv:
        type: string
        default: "test-environment-27"

    steps:
      - run:
          name: Install LaTeX
          command: |
            apt-get --yes update
            apt-get --yes install texlive-latex-base
            apt-get --yes install texlive-fonts-recommended
            apt-get --yes install texlive-fonts-extra
            apt-get --yes install texlive-latex-extra
            apt-get --yes install texlive-science

      - run:
          name: Build Docs
          command: |
            source activate ~/project/<< parameters.condaenv >>
            export ETS_TOOLKIT=null
            python setup.py build_docs --pdf

      - store_artifacts:
          path: ~/project/documentation/_build/latex/fipy.pdf

  # localize changes to cache name to these two commands
  save_conda_cache:
    steps:
      - save_cache:
          paths:
            - /opt/conda
            - /root/.cache/pip
          key: v7-dependencies-{{ arch }}

  restore_conda_cache:
    description: "Restore cache holding conda and pip"

    steps:
      - restore_cache:
          keys:
          - v7-dependencies-{{ arch }}
          # fallback to using the latest cache if no exact match is found
          - v7-dependencies-

  install_dependencies:
    steps:
      - run:
          name: Install Dependencies
          command: |
            apt-get --yes update
            apt-get --yes install build-essential
            conda config --set always_yes yes --set changeps1 no
            conda update -q conda
            conda config --remove channels defaults

  remove_extracted_conda_packages:
    description: "force conda to download packages into the cache and then
                  clean out extracted packages
                  after https://gist.github.com/mcg1969/cbb1760cea6b0671959d8cbf957c89bf"
    steps:
      - run:
          name: Remove Extracted Conda Packages
          command: |
            conda clean --packages

  install_conda_packages:
    description: "Restore conda environment and install packages"

    parameters:
      packages:
        type: string
        default: ""
      condaenv:
        type: string
        default: "test-environment-27"

    steps:
      # Download and cache dependencies
      - restore_conda_cache

      - install_dependencies

      - createenv:
          condaenv: << parameters.condaenv >>
          packages: << parameters.packages >>

      - remove_extracted_conda_packages

      - save_conda_cache

      - persist_to_workspace:
          root: ~/project
          paths:
            - << parameters.condaenv >>

jobs:
  conda2_env:
    <<: *defaults2

    steps:
      - install_conda_packages:
          packages: "python=2.7 fipy"
          condaenv: "test-environment-27"

  conda3_env:
    <<: *defaults3

    steps:
      - install_conda_packages:
          packages: "python=3.6 fipy"
          condaenv: "test-environment-36"

  test-27-pysparse:
    <<: *defaults2

    steps:
      - test_fipy:
          condaenv: test-environment-27
    environment:
      FIPY_SOLVERS: pysparse

  test-27-inline:
    <<: *defaults2

    steps:
      - test_fipy:
          condaenv: test-environment-27
    environment:
      FIPY_SOLVERS: pysparse
      FIPY_INLINE: 1

  test-27-scipy:
    <<: *defaults2

    steps:
      - test_fipy:
          condaenv: test-environment-27
    environment:
      FIPY_SOLVERS: scipy

  test-27-trilinos:
    <<: *defaults2

    steps:
      - test_fipy:
          condaenv: test-environment-27
    environment:
      FIPY_SOLVERS: trilinos

  test-27-parallel:
    <<: *defaults2

    steps:
      - test_fipy:
          mpirun: "mpirun -np 2"
          condaenv: test-environment-27
    environment:
      FIPY_SOLVERS: trilinos
      OMP_NUM_THREADS: 1

  test-36-scipy:
    <<: *defaults3

    steps:
      - test_fipy:
          condaenv: test-environment-36
    environment:
      FIPY_SOLVERS: scipy

  pylint:
    <<: *defaults2

    steps:
      - checkout

      - restore_conda_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: Lint
          command: |
            source activate ~/project/test-environment-27
            pip install pylint
            pylint setup.py

  flake8:
    <<: *defaults2

    steps:
      - checkout

      - restore_conda_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: Lint
          command: |
            source activate ~/project/test-environment-27
            pip install flake8
            flake8 setup.py

  black:
    <<: *defaults3

    steps:
      - checkout

      - restore_conda_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: Lint
          command: |
            source activate ~/project/test-environment-36
            conda install --channel conda-forge black
            black --target-version py27 --fast --diff --check setup.py

  pyspelling:
    <<: *defaults3

    steps:
      - checkout

      - restore_conda_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: Spell Check
          command: |
            source activate ~/project/test-environment-36
            conda install --channel conda-forge hunspell
            pip install pyspelling
            wget -O en_US.aff  https://cgit.freedesktop.org/libreoffice/dictionaries/plain/en/en_US.aff?id=a4473e06b56bfe35187e302754f6baaa8d75e54f
            wget -O en_US.dic https://cgit.freedesktop.org/libreoffice/dictionaries/plain/en/en_US.dic?id=a4473e06b56bfe35187e302754f6baaa8d75e54f
            pyspelling

  build-27-docs:
    <<: *defaults2

    steps:
      - checkout

      - run:
          name: fetch tags
          command: git fetch origin --tags

      - restore_conda_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: install sphinx
          command: |
            source activate ~/project/test-environment-27
            conda install --channel conda-forge sphinx future
            pip install 'sphinxcontrib-bibtex<=0.4.2'
            pip install numpydoc
            conda install --channel conda-forge matplotlib pandas imagemagick

      - build_html_docs:
          condaenv: test-environment-27

      - build_pdf_docs:
          condaenv: test-environment-27

  build-36-docs:
    <<: *defaults3

    steps:
      - checkout

      - run:
          name: fetch tags
          command: git fetch origin --tags

      - restore_conda_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: install sphinx
          command: |
            source activate ~/project/test-environment-36
            conda install --channel conda-forge sphinx future
            pip install sphinxcontrib-bibtex
            pip install numpydoc
            conda install --channel conda-forge matplotlib pandas imagemagick

      - build_html_docs:
          condaenv: test-environment-36

  build-binaries:
    <<: *defaults3

    steps:
      - checkout

      - run:
          name: fetch tags
          command: git fetch origin --tags

      - restore_conda_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: build and test tarball
          command: |
            source activate ~/project/test-environment-36
            python setup.py bdist_egg
            python setup.py release --unix
            FIPY_VERSION=`python setup.py --version`
            mkdir tmp
            cd tmp
            cp ../dist/FiPy-${FIPY_VERSION}.tar.gz .
            tar zxvf FiPy-${FIPY_VERSION}.tar.gz
            cd FiPy-${FIPY_VERSION}
            python setup.py install
            cd ..
            python -c "import fipy; fipy.test()"

      - store_artifacts:
          path: ~/project/dist


workflows:
  version: 2

  test:
    jobs:
      - conda2_env
      - conda3_env
#       - build-27-docs:
#           requires:
#             - conda2_env
      - build-36-docs:
          requires:
            - conda3_env
      - pylint:
          requires:
            - conda2_env
      - flake8:
          requires:
            - conda2_env
      - black:
          requires:
            - conda3_env
      - pyspelling:
          requires:
            - conda3_env
      - test-27-pysparse:
          requires:
            - conda2_env
#       - test-27-inline:
#           requires:
#             - conda2_env
      - test-27-scipy:
          requires:
            - conda2_env
      - test-27-trilinos:
          requires:
            - conda2_env
      - test-27-parallel:
          requires:
            - conda2_env
      - test-36-scipy:
          requires:
            - conda3_env
      - build-binaries:
          requires:
            - conda3_env
            - build-36-docs
            - pylint
            - flake8
            - black
            - pyspelling
            - test-27-pysparse
            - test-27-scipy
            - test-27-trilinos
            - test-27-parallel
            - test-36-scipy
