# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

defaults: &defaults
  working_directory: ~/project

defaults2: &defaults2
  <<: *defaults

  docker:
    - image: continuumio/miniconda2

defaults3: &defaults3
  <<: *defaults

  docker:
    - image: continuumio/miniconda3

commands:
  createenv:
    description: "Create conda environment"

    parameters:
      env:
        type: string
        default: "cache"

      packages:
        type: string
        default: ""

    steps:
      - run:
          name: Create Conda Environment
          command: |
            conda create -v --quiet --prefix << parameters.env >> --show-channel-urls --channel guyer --channel conda-forge << parameters.packages >>
            source activate ~/project/<< parameters.env >>
            pip install scikit-fmm

  test_fipy:
    description: "Run FiPy Tests"

    parameters:
      options:
        type: string
        default: ""
      mpirun:
        type: string
        default: ""

    steps:
      - checkout

      - restore_conda_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: Run Tests
          no_output_timeout: 30m
          command: |
            source activate ~/project/test-environment
            << parameters.mpirun >> python setup.py test << parameters.options >>

      - store_artifacts:
          path: test-reports
          destination: test-reports

  # localize changes to cache name to these two commands
  save_conda_cache:
    steps:
      - save_cache:
          paths:
            - /opt/conda
            - /root/.cache/pip
          key: v7-dependencies-{{ arch }}

  restore_conda_cache:
    description: "Restore cache holding conda and pip"

    steps:
      - restore_cache:
          keys:
          - v7-dependencies-{{ arch }}
          # fallback to using the latest cache if no exact match is found
          - v7-dependencies-

  install_dependencies:
    steps:
      - run:
          name: Install Dependencies
          command: |
            apt-get --yes update
            apt-get --yes install build-essential
            conda config --set always_yes yes --set changeps1 no
            conda update -q conda
            conda config --remove channels defaults

  remove_extracted_conda_packages:
    description: "force conda to download packages into the cache and then
                  clean out extracted packages
                  after https://gist.github.com/mcg1969/cbb1760cea6b0671959d8cbf957c89bf"
    steps:
      - run:
          name: Remove Extracted Conda Packages
          command: |
            conda clean --packages

  install_conda_packages:
    description: "Restore conda environment and install packages"

    parameters:
      packages:
        type: string
        default: ""

    steps:
      # Download and cache dependencies
      - restore_conda_cache

      - install_dependencies

      - createenv:
          env: "test-environment"
          packages: << parameters.packages >>

      - remove_extracted_conda_packages

      - save_conda_cache

      - persist_to_workspace:
          root: ~/project
          paths:
            - test-environment

jobs:
  conda2_env:
    <<: *defaults2

    steps:
      - install_conda_packages:
          packages: "python=2.7 numpy scipy \"gmsh<4.0\" pysparse pytrilinos  mpi4py  matplotlib mayavi weave"

  conda3_env:
    <<: *defaults3

    steps:
      - install_conda_packages:
          packages: "python=3.6 numpy scipy \"gmsh<4.0\" matplotlib mayavi"

  test-27-pysparse:
    <<: *defaults2

    steps:
      - test_fipy:
          options: "--pysparse"

  test-27-scipy:
    <<: *defaults2

    steps:
      - test_fipy:
          options: "--scipy"

  test-27-trilinos:
    <<: *defaults2

    steps:
      - test_fipy:
          options: "--trilinos"

  test-27-parallel:
    <<: *defaults2

    steps:
      - test_fipy:
          options: "--trilinos"
          mpirun: "mpirun -np 2"

  test-36-scipy:
    <<: *defaults3

    steps:
      - run:
          name: 2to3
          command: |
            2to3 --write . &> /dev/null;
            2to3 --write --doctests_only . &> /dev/null;

      - test_fipy:
          options: "--scipy"

workflows:
  version: 2

  test:
    jobs:
      - conda2_env
      - conda3_env
      - test-27-pysparse:
          requires:
            - conda2_env
      - test-27-scipy:
          requires:
            - conda2_env
      - test-27-trilinos:
          requires:
            - conda2_env
      - test-27-parallel:
          requires:
            - conda2_env
      - test-36-scipy:
          requires:
            - conda3_env
